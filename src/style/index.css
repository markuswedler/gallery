* {
  padding: 0;
  margin: 0;
  box-sizing: border-box;
}

:root {
  --wrapper-padding: 1rem;
  --wrapper-max-width: calc(90rem + var(--wrapper-padding)*2);
}

.wrapper {
  max-width: var(--wrapper-max-width);
  padding-left: var(--wrapper-padding);
  padding-right: var(--wrapper-padding);
  margin-left: auto;
  margin-right: auto;
}

body, button {
  font-family: -apple-system, BlinkMacSystemFont, "Segoe UI", "Roboto", "Oxygen", "Ubuntu", "Cantarell", "Fira Sans", "Droid Sans", "Helvetica Neue", sans-serif;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
  font-size: 0.875rem;
  color: #EDEDED;
}

a {
  text-decoration: none;
}

.btn {
  cursor: pointer;
  background: #1c1c1c;
  color: #ededed;
  font-weight: 700;
  border: none;
  padding: 0.6rem 0.9rem;
}
.btn.light {
  background: #ededed;
  color: #1c1c1c;
}
.btn.green {
  background: #05D36B;
}

header {
  padding: 1rem;
}
header .logo {
  pointer-events: none;
  -webkit-user-select: none;
     -moz-user-select: none;
      -ms-user-select: none;
          user-select: none;
  width: 8rem;
  filter: invert(1);
}

.Home .dates {
  overflow-x: auto;
  display: flex;
  gap: 1rem;
  padding: var(--wrapper-padding);
}
.Home .dates::-webkit-scrollbar {
  height: 0.5rem;
}
.Home .dates::-webkit-scrollbar-thumb {
  background: #4f4f4f;
}
.Home .dates input[type=radio] {
  position: absolute;
  opacity: 0;
}
.Home .dates input[type=radio]:focus-visible + label {
  outline: 0.125rem solid #ededed;
  outline-offset: 0.125rem;
}
.Home .dates input[type=radio]:checked + label {
  background: #ededed;
  color: #1c1c1c;
}
.Home .dates label {
  cursor: pointer;
  display: block;
  white-space: nowrap;
  border: 0.1rem solid #ededed;
  border-radius: 100vmax;
}
.Home .images {
  max-width: calc(var(--wrapper-max-width) - var(--wrapper-padding) * 2);
  display: grid;
  grid-template-columns: repeat(auto-fit, minmax(12rem, 1fr));
  padding: 0;
}
.Home .images li {
  cursor: pointer;
  aspect-ratio: 1/1;
  background-color: #222;
  background-size: cover;
  background-position: center;
}

.ViewWindow {
  z-index: 1000;
  position: fixed;
  top: 0;
  right: 0;
  bottom: 0;
  left: 0;
  background: rgba(0, 0, 0, 0.5);
  -webkit-backdrop-filter: blur(10px);
          backdrop-filter: blur(10px);
  padding: 2rem;
}
.ViewWindow > .close {
  position: absolute;
  top: 0;
  right: 0;
  bottom: 0;
  left: 0;
}
.ViewWindow .control {
  width: 100%;
  height: 100%;
  display: flex;
  flex-flow: column;
  align-items: flex-end;
  gap: 0.0625rem;
  margin-left: auto;
}
.ViewWindow .control label {
  cursor: pointer;
  position: relative;
  z-index: 1000;
  display: flex;
  justify-content: center;
  align-items: center;
  aspect-ratio: 1/1;
  width: 2rem;
  background: #fff;
}
.ViewWindow .control label img {
  width: 1.1rem;
}
.ViewWindow .control .close::before, .ViewWindow .control .close::after {
  content: "";
  position: absolute;
  height: 0.08rem;
  width: 0.852rem;
  background: #000;
  border-radius: 100vmax;
}
.ViewWindow .control .close::before {
  transform: rotate(45deg);
}
.ViewWindow .control .close::after {
  transform: rotate(-45deg);
}
.ViewWindow .control .download .loader {
  width: 1rem;
  border-width: 0.11rem;
  border-color: #1c1c1c;
}
.ViewWindow .container {
  position: absolute;
  left: 50%;
  top: 50%;
  transform: translate(-50%, -50%);
  border-radius: 0.25rem;
}
.ViewWindow .container img {
  display: block;
  max-width: calc(100vw - 4rem);
  max-height: calc(100vh - 4rem);
  background: #222;
}

body {
  overflow-x: hidden;
  background: #1c1c1c;
}

ul {
  list-style: none;
}

.loader {
  position: absolute;
  left: 50%;
  top: 50%;
  aspect-ratio: 1/1;
  width: 2rem;
  border: 0.125rem solid #ededed;
  border-bottom-color: transparent !important;
  border-radius: 50%;
  -webkit-animation: 1s loader linear infinite;
          animation: 1s loader linear infinite;
}
@-webkit-keyframes loader {
  from {
    transform: translate(-50%, -50%) rotate(0);
  }
  to {
    transform: translate(-50%, -50%) rotate(360deg);
  }
}
@keyframes loader {
  from {
    transform: translate(-50%, -50%) rotate(0);
  }
  to {
    transform: translate(-50%, -50%) rotate(360deg);
  }
}/*# sourceMappingURL=index.css.map */